# 指定基于 php:7.2-fpm-alpine 创建
FROM php:7.2-fpm-alpine

LABEL MAINTAINER="XiaoYu <1765841705@qq.com>"

ARG CONTAINER_PACKAGE_URL
ARG PHP_EXTENSIONS_72
ARG TZ

ENV EXTENSIONS=",${PHP_EXTENSIONS_72},"

# 资源替换 阿里云镜像
RUN sed -i "s/dl-cdn.alpinelinux.org/${CONTAINER_PACKAGE_URL}/g" /etc/apk/repositories

# 更新apk 修改时间
RUN apk update && apk upgrade \
    && apk add --no-cache --virtual .build-deps tzdata \
    && cp -r "/usr/share/zoneinfo/${TZ}" /etc/localtime \
    && echo "${TZ}" > /etc/timezone

# 安装扩展
RUN docker-php-source extract \
    && if [ "${PHP_EXTENSIONS_72}" != "" ]; \
        then \
            apk add --no-cache --virtual .build-deps autoconf g++ make libtool linux-headers \
            && apk add --no-cache libstdc++ libgomp; \
        fi \
    && if [ -z "${EXTENSIONS##*,dba,*}" ]; \
        then \
            echo "---------- Install dba ----------" \
            && docker-php-ext-install -j$(nproc) dba; \
        fi \
    && if [ -z "${EXTENSIONS##*,event,*}" ]; \
        then \
            echo "---------- Install event ----------" \
            && apk add --no-cache libevent-dev \
            && docker-php-ext-install -j$(nproc) event; \
        fi \
    && if [ -z "${EXTENSIONS##*,gmp,*}" ]; \
        then \
            echo "---------- Install gmp ----------" \
            && apk add --no-cache gmp-dev \
            && docker-php-ext-install -j$(nproc) gmp; \
        fi \
    && if [ -z "${EXTENSIONS##*,imap,*}" ]; \
        then \
            echo "---------- Install imap ----------" \
            && apk add --no-cache imap-dev openssl-dev \
            && docker-php-ext-configure imap --with-imap --with-imap-ssl \
            && docker-php-ext-install -j$(nproc) imap; \
        fi \
    && if [ -z "${EXTENSIONS##*,ldap,*}" ]; \
        then \
            echo "---------- Install ldap ----------" \
            && apk add --no-cache ldb-dev openldap-dev \
            && docker-php-ext-install -j$(nproc) ldap; \
        fi \
    && if [ -z "${EXTENSIONS##*,pdo_dblib,*}" ]; \
        then \
            echo "---------- Install pdo_dblib ----------" \
            && apk add --no-cache freetds-dev \
            && docker-php-ext-install -j$(nproc) pdo_dblib; \
        fi \
    && if [ -z "${EXTENSIONS##*,pdo_pgsql,*}" ]; \
        then \
            echo "---------- Install pdo_pgsql ----------" \
            && apk add --no-cache libpq-dev \
            && docker-php-ext-install -j$(nproc) pdo_pgsql; \
        fi \
    && if [ -z "${EXTENSIONS##*,pspell,*}" ]; \
        then \
            echo "---------- Install pspell ----------" \
            && apk add --no-cache aspell-dev \
            && docker-php-ext-install -j$(nproc) pspell; \
        fi \
    && if [ -z "${EXTENSIONS##*,recode,*}" ]; \
        then \
            echo "---------- Install recode ----------" \
            && apk add --no-cache recode-dev \
            && docker-php-ext-install -j$(nproc) recode; \
        fi \
    && if [ -z "${EXTENSIONS##*,wddx,*}" ]; \
        then \
            echo "---------- Install wddx ----------" \
            && apk add --no-cache libxml2-dev libxslt-dev \
            && docker-php-ext-install -j$(nproc) wddx; \
        fi \
    && if [ -z "${EXTENSIONS##*,xmlrpc,*}" ]; \
        then \
            echo "---------- Install xmlrpc ----------" \
            && apk add --no-cache libxml2-dev libxslt-dev \
            && docker-php-ext-install -j$(nproc) xmlrpc; \
        fi \
    && if [ -z "${EXTENSIONS##*,zend_test,*}" ]; \
        then \
            echo "---------- Install zend_test ----------" \
            && docker-php-ext-install -j$(nproc) zend_test; \
        fi \
    # pecl 安装的扩展
    && if [ -z "${EXTENSIONS##*,ast,*}" ]; \
        then \
            echo "---------- Install ast ----------" \
            && printf "\n" | pecl install ast \
            && docker-php-ext-enable ast; \
        fi \
    && if [ -z "${EXTENSIONS##*,inotify,*}" ]; \
        then \
            echo "---------- Install inotify ----------" \
            && printf "\n" | pecl install inotify \
            && docker-php-ext-enable inotify; \
        fi \
    && if [ -z "${EXTENSIONS##*,msgpack,*}" ]; \
        then \
            echo "---------- Install msgpack ----------" \
            && printf "\n" | pecl install msgpack \
            && docker-php-ext-enable msgpack; \
        fi \
    && if [ -z "${EXTENSIONS##*,imagick,*}" ]; \
        then \
            echo "---------- Install imagick ----------" \
            && apk add --no-cache imagemagick-dev \
            && printf "\n" | pecl install imagick \
            && docker-php-ext-enable imagick; \
        fi \
    && if [ -z "${EXTENSIONS##*,rar,*}" ]; \
        then \
            echo "---------- Install rar ----------" \
            && printf "\n" | pecl install rar \
            && docker-php-ext-enable rar; \
        fi \
    && if [ -z "${EXTENSIONS##*,seaslog,*}" ]; \
        then \
            echo "---------- Install seaslog ----------" \
            && printf "\n" | pecl install seaslog \
            && docker-php-ext-enable seaslog; \
        fi \
    && if [ -z "${EXTENSIONS##*,varnish,*}" ]; \
        then \
            echo "---------- Install varnish ----------" \
            && apk add --no-cache varnish-dev \
            && printf "\n" | pecl install varnish \
            && docker-php-ext-enable varnish; \
        fi \
    && if [ -z "${EXTENSIONS##*,xhprof,*}" ]; \
        then \
            echo "---------- Install xhprof ----------" \
            && printf "\n" | pecl install xhprof \
            && docker-php-ext-enable xhprof; \
        fi \
    && if [ -z "${EXTENSIONS##*,yaf,*}" ]; \
        then \
            echo "---------- Install yaf ----------" \
            && printf "\n" | pecl install yaf \
            && docker-php-ext-enable yaf; \
        fi \
    && if [ -z "${EXTENSIONS##*,zookeeper,*}" ]; \
        then \
            echo "---------- Install zookeeper ----------" \
            && printf "\n" | pecl install zookeeper \
            && docker-php-ext-enable zookeeper; \
        fi \
    && docker-php-source delete \
    && apk del .build-deps
