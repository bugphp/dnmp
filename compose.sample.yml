services:
  # 使用前最好阅读一遍（README.md）说明文件，以便快速上手，遇到问题也能及时排查
  mysql8.0:
    image: mysql:8.0
    container_name: mysql80
    restart: always
    privileged: true
    ports:
      - "3306:3306"
    volumes:
      - "./servers/mysql/mysql8.0/config:/etc/mysql"  # 配置文件
      - "./data/mysql/mysql8.0:/var/lib/mysql"        # 数据库文件
      - "./logs/mysql/mysql8.0:/var/log/mysql"        # 日志文件
    environment:
      - "TZ=${TZ}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD_80}"
      - "MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST_80}"
      - "MYSQL_USER=${MYSQL_USER_80}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD_80}"
    networks:
      - dnmp-net

  redis6.2:
    image: redis:6.2-alpine
    container_name: redis62
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "./servers/redis/redis6.2/config:/etc/redis"  # 配置文件
      - "./data/redis/redis6.2:/data"                 # 数据文件
      - "./logs/redis/redis6.2:/var/log/redis"        # 日志文件
    environment:
      - "TZ=${TZ}"
    entrypoint: ["redis-server", "/etc/redis/docker.conf", "--requirepass", "${REDIS_PASSWORD_62}"]
    networks:
      - dnmp-net

  php72:
    build:
      context: ./servers/php/php7.2
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_72: ${PHP_EXTENSIONS_72}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php72
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - "./servers/php/php7.2/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php7.2/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php7.2/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php7.2/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php7.2:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix sock连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php73:
    build:
      context: ./servers/php/php7.3
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_73: ${PHP_EXTENSIONS_73}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php73
    restart: always
    ports:
      - "9001:9000"
    volumes:
      - "./servers/php/php7.3/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php7.3/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php7.3/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php7.3/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php7.3:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix sock连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php74:
    build:
      context: ./servers/php/php7.4
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_74: ${PHP_EXTENSIONS_74}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php74
    restart: always
    ports:
      - "9002:9000"
    volumes:
      - "./servers/php/php7.4/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php7.4/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php7.4/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php7.4/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php7.4:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php80:
    build:
      context: ./servers/php/php8.0
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_80: ${PHP_EXTENSIONS_80}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php80
    restart: always
    ports:
      - "9003:9000"
    volumes:
      - "./servers/php/php8.0/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php8.0/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php8.0/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php8.0/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php8.0:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php81:
    build:
      context: ./servers/php/php8.1
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_81: ${PHP_EXTENSIONS_81}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php81
    restart: always
    ports:
      - "9004:9000"
    volumes:
      - "./servers/php/php8.1/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php8.1/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php8.1/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php8.1/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php8.1:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php82:
    build:
      context: ./servers/php/php8.2
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_82: ${PHP_EXTENSIONS_82}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php82
    restart: always
    ports:
      - "9005:9000"
    volumes:
      - "./servers/php/php8.2/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php8.2/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php8.2/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php8.2/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php8.2:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  php83:
    build:
      context: ./servers/php/php8.3
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS_83: ${PHP_EXTENSIONS_83}
        COMPOSER_IMAGE_URL: ${COMPOSER_IMAGE_URL}
        COMPOSER_DOWNLOAD_URL: ${COMPOSER_DOWNLOAD_URL}
        TZ: ${TZ}
    container_name: php83
    restart: always
    ports:
      - "9006:9000"
    volumes:
      - "./servers/php/php8.3/config/php.ini:/usr/local/etc/php/php.ini:ro"                   # php.ini
      - "./servers/php/php8.3/config/php-fpm.conf:/usr/local/etc/php-fpm.conf:rw"             # php-fpm.conf
      - "./servers/php/php8.3/config/php-fpm.d:/usr/local/etc/php-fpm.d"                      # php-fpm.d
      - "./servers/php/php8.3/config/supervisor/supervisord.conf:/etc/supervisord.conf:ro"    # supervisor配置文件
      - "./logs/php/php8.3:/var/log/php"                                                      # 日志文件
      - "./panel:/usr/panel"                                                                  # nginx使用unix连接文件
      - "${PROJECT_DIRECTORY}:/var/www/html"                                                  # 文件路径
    cap_add:
      - SYS_PTRACE
    networks:
      - dnmp-net

  nginx1.21:
    build:
      context: ./servers/nginx/nginx1.21
      args:
        TZ: ${TZ}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_REGISTER_ACME_MAIL_1_21: ${NGINX_REGISTER_ACME_MAIL_1_21}
    container_name: nginx1.21
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./servers/nginx/nginx1.21/config:/etc/nginx"   # 配置文件
      - "./logs/nginx/nginx1.21:/var/log/nginx"         # 日志文件
      - "./panel:/usr/panel"                            # php unix连接文件
      - "${PROJECT_DIRECTORY}:/usr/share/nginx/html"    # 文件路径
    environment:
      - "SSL_DOMAINS=${NGINX_SSL_DOMAINS_1_21}"
      - "SSL_SERVER=${NGINX_SSL_SERVER_1_21}"
      - "SSL_DNS=${NGINX_SSL_DNS_1_21}"
      - "SSL_BASE_DIR=${NGINX_SSL_BASE_DIR_1_21}"
      - "RELOAD_CMD=${NGINX_RELOAD_CMD_1_21}"
    networks:
      - dnmp-net

  mongo6.0:
    image: mongo:6.0
    container_name: mongodb60
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "./servers/mongo/mongo6.0/mongo.conf:/etc/mongo.conf:ro"    # 配置文件
      - "./data/mongo/mongo6.0:/var/lib/mongodb:rw"                 # 数据库文件
      - "./logs/mongo/mongo6.0:/var/log/mongodb:rw"                 # 日志文件
    environment:
      - "TZ=${TZ}"
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME_60}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD_60}"
    command: "mongod --config /etc/mongo.conf"
    networks:
      - dnmp-net

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - "TZ=${TZ}"
      - "ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}"
      - "ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}"
      - "ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}"
    depends_on:
      - mongo6.0
    networks:
      - dnmp-net

  rabbitmq3.11:
    build:
      context: ./servers/rabbitmq/rabbitmq3.11
      args:
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        RABBITMQ_PLUGINS_3_11: ${RABBITMQ_PLUGINS_3_11}
        TZ: ${TZ}
    container_name: rabbitmq3.11
    hostname: rabbitmq3.11          # RabbitMQ的一个重要注意事项是它根据所谓的 “节点名称” 存储数据，默认为主机名
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "./servers/rabbitmq/rabbitmq3.11/conf.d/10-defaults.conf:/etc/rabbitmq/conf.d/10-defaults.conf:ro"   # 配置文件
      - "./data/rabbitmq/rabbitmq3.11:/var/lib/rabbitmq/mnesia:rw"            # 数据文件
      - "./logs/rabbitmq/rabbitmq3.11:/var/log/rabbitmq:rw"                   # 日志文件
    environment:
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER_3_11}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS_3_11}"
    networks:
      - dnmp-net

  elasticsearch8.4:
    image: elasticsearch:8.4.0
    container_name: elasticsearch8.4
    restart: always
    privileged: true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./servers/elasticsearch/elasticsearch8.4/config:/usr/share/elasticsearch/config" # 配置文件
      - "./data/elasticsearch/elasticsearch8.4:/usr/share/elasticsearch/data"             # 数据文件
      - "./logs/elasticsearch/elasticsearch8.4:/usr/share/elasticsearch/logs"             # 日志文件
      - "./panel/plugins/elasticsearch/elasticsearch8.4:/usr/share/elasticsearch/plugins" # 插件文件
    environment:
      - "TZ=${TZ}"
      - "discovery.type=single-node"      # 单节点设置
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 设置内存大小
    networks:
      - dnmp-net

  kibana8.4:
    image: kibana:8.4.0
    container_name: kibana8.4
    restart: always
    ports:
      - "5601:5601"
    volumes:
      - "./servers/kibana/kibana8.4/kibana.yml:/usr/share/kibana/config/kibana.yml:ro" # 配置文件
    environment:
      - "TZ=${TZ}"
      - "ELASTICSEARCH_HOSTS=${KIBANA_ELASTICSEARCH_HOSTS_84}"
      - "ELASTICSEARCH_USERNAME=${KIBANA_ELASTICSEARCH_USERNAME_84}"
      - "ELASTICSEARCH_PASSWORD=${KIBANA_ELASTICSEARCH_PASSWORD_84}"
      - "I18N_LOCALE=zh-CN"
    depends_on: # 依赖ES先启动
      - elasticsearch8.4
    networks:
      - dnmp-net

networks:
  dnmp-net: